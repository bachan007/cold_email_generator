import os
from langchain_groq import ChatGroq
from langchain.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser

groq_api_key=os.environ['GROQ_API_KEY']

llm = ChatGroq(groq_api_key=groq_api_key,
               model_name = "mixtral-8x7b-32768")

def save_response_to_file(response, filename):
    with open(rf'summary/{filename}.txt', 'w') as file:
        file.write(response)
    print(f"Response has been saved to {filename}")

def read_summary(candidate):
    file = open(rf'summary/{candidate}_summary.txt', "r")
    content = file.read()
    return content

candidate_info = read_summary('bachan')

# you need to replace the email content manually
email_content = """
Azure Data Engineer Role in TOP MNC(Direct Payroll)
		Gurugram, Pune, Noida
		4 - 8 years
		15.0 lacs - 30.0 lacs
		Hybrid
		Pyspark, Azure Databricks, Azure Data Factory, Azure Data Lake, sql
	
Apply now

Job description
Greetings from Tmangoes HR Consulting Pvt Ltd....!!!!!!!

Azure Data Engineer-TOP MNC(Direct Payroll)-Pune

Experience - 4 to 8 years

Mandatory Skills- PySpark+SQL+ADF+Databricks

Location -Pune/Gurgaon/Noida

Interested candidates can apply here or kindly send your updated resume with below details.

senthil@tmangoes.com


Full Name -

Overall Exp -

Rel Exp in Azure Data -

Current Organization-

C.CTC-

E.CTC-

Notice Period-

"""

prompt_for_email = ChatPromptTemplate.from_messages([
    ('system', '''You are an AI assistant tasked with drafting a professional and polite response to a recruiter email. Below is the content of the recruiter's email and information about the candidate's profile. 
     Please craft a reply that is tailored to the recruiter's message, reflects the candidate's qualifications, and follows common business etiquette.
Your reply should have:
1. **Alignment with Job Requirements**:
   - Describe a little, how the candidate’s skills, achievements, and relevant projects align with the key responsibilities and required skills for the job.

2. **Candidate’s Fit**:
   - Explain why the candidate is a strong fit for the position, emphasizing their relevant experience and how it meets the needs outlined in the job description.

### Instructions:
- Acknowledge the recruiter's message and express gratitude.
- Mention any relevant details about the position and the candidate's fit.
- Address any specific questions or requests from the recruiter.
- Keep the tone professional and friendly.
- If the recruiter is requesting availability for an interview, provide suitable time slots.
- End the email on a positive note, showing enthusiasm for the opportunity.
     
- If any specific question asked by recruiter and you do not have the answer, just leave it. Reply according to the requirements mentioned in the recruiter email.
Additional Note:
- Mention that the content of this email is generated by an automation script, which showcases the candidate's proficiency in leveraging Generative AI (GenAI) technology.. 
- Provide a link to the GitHub repository where the script and other relevant projects are showcased: https://github.com/bachan007/cold_email_generator

'''),
    ('user', f'Candidate’s Information: {candidate_info}\nEmail Content: {email_content}')
])

chain_for_email = prompt_for_email | llm | StrOutputParser()


email_prompt = f"""
Please write a professional reply for a job application based on the following information:

### Candidate’s Portfolio, Projects, and Skills Highlights:
{candidate_info}

### Job Email Description:
{email_content}

### Email Objective:
- The goal of this email is to reply the email in a way, that the recruiter should be compelled to proceed further with the candidate profile.
### Desired Outcome:
- Request a meeting or call to discuss potential opportunities.

 Align the candidate's expertise with the information asked in the email content.

### Additional Note:
- Mention that the content of this email is generated by an automation script, which showcases the candidate's proficiency in leveraging Generative AI (GenAI) technology.
- Provide a link to the GitHub repository where the script and other relevant projects are showcased: https://github.com/bachan007/cold_email_generator

"""

response = chain_for_email.invoke({'candidate_info':candidate_info, 'email_content':email_content,'question': email_prompt})

save_response_to_file(response,filename='TOP MNC')